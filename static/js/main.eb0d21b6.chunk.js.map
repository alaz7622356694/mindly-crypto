{"version":3,"sources":["services/CryptoService.js","components/ListCryptoComponent.jsx","components/HeaderComponent.jsx","components/FooterComponent.jsx","components/InfoComponent.jsx","components/FormComponent.jsx","App.js","serviceWorker.js","index.js"],"names":["CRYPTO_API_BASE_URL","axios","get","then","res","cryptoId","post","id","delete","ListCryptoComponent","props","state","crypto","message","addCrypto","bind","reloadCryptoList","deleteCrypto","this","CryptoService","getCrypto","setState","data","window","localStorage","removeItem","filter","className","map","key","cryptocurrency","amount","dateOfPurchase","walletLocation","currentMarketValue","onClick","e","confirm","Component","HeaderComponent","class","href","type","data-toggle","data-target","FooterComponent","InfoComponent","info","src","alt","FormComponent","markets","Map","ShowCurrentDate","Date","getDate","getMonth","getFullYear","Crypto","value","changeCryptoHandler","event","target","changeAmountHandler","changeWalletLocationHandler","changeDateOfPurchaseHandler","changecurrentMarketValueHandler","getMarketsData","item","includes","set","current_price","role","onChange","placeholder","name","required","placeholer","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.eb0d21b6.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst CRYPTO_API_BASE_URL = \"https://mindly-back.herokuapp.com/api/crypto\";\r\nconst marketDataUrl =\r\n  \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=eur&order=market_cap_desc&per_page=100&page=1&sparkline=false\";\r\n\r\nclass CryptoService {\r\n  getCrypto() {\r\n    return axios.get(CRYPTO_API_BASE_URL).then((res) => res);\r\n  }\r\n\r\n  getCryptoById(cryptoId) {\r\n    return axios.get(CRYPTO_API_BASE_URL + \"/\" + cryptoId).then((res) => res);\r\n  }\r\n\r\n  addCrypto(cryptoId) {\r\n    return axios.post(CRYPTO_API_BASE_URL,cryptoId).then((res) => res);\r\n      \r\n  }\r\n\r\n  getMarketsData() {\r\n    return axios.get(marketDataUrl).then((res) => res);\r\n  }\r\n  deleteCrypto(id) {\r\n    return axios.delete(CRYPTO_API_BASE_URL + \"/\" + id).then((res) => res);\r\n  }\r\n}\r\nexport default new CryptoService();\r\n","import React, { Component } from \"react\";\r\nimport CryptoService from \"../services/CryptoService\";\r\n\r\nclass ListCryptoComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      crypto: [],\r\n      message: null,\r\n    };\r\n\r\n    this.addCrypto = this.addCrypto.bind(this);\r\n    this.reloadCryptoList = this.reloadCryptoList.bind(this);\r\n    this.deleteCrypto = this.deleteCrypto.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.reloadCryptoList();\r\n  }\r\n\r\n  reloadCryptoList() {\r\n    CryptoService.getCrypto().then((res) => {\r\n      this.setState({ crypto: res.data });\r\n    });\r\n  }\r\n\r\n  addCrypto() {\r\n    window.localStorage.removeItem(\"cryptoId\");\r\n  }\r\n\r\n  deleteCrypto(id) {\r\n    CryptoService.deleteCrypto(id).then((res) => {\r\n      this.setState({\r\n        crypto: this.state.crypto.filter((crypto) => crypto.id !== id),\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\" container-fluid card  bg-dark\">\r\n        <div className=\"container-sm card-header bg-primary text-light text-center py-2 \">\r\n          <h2>Your portfolio items</h2>\r\n        </div>\r\n        <div className=\"container-sm card-body bg-light text-dark \">\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table table-striped table-bordered   \">\r\n              <thead>\r\n                <tr>\r\n                  <th>Cryptocurrency</th>\r\n                  <th>Amount</th>\r\n                  <th>Date of purchase</th>\r\n                  <th>Wallet location</th>\r\n                  <th>Current market value(EUR)</th>\r\n                  <th>Option</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.state.crypto.map((crypto) => (\r\n                  <tr key={crypto.id}>\r\n                    <td>{crypto.cryptocurrency}</td>\r\n                    <td>{crypto.amount}</td>\r\n                    <td>{crypto.dateOfPurchase}</td>\r\n                    <td>{crypto.walletLocation}</td>\r\n                    <td>{crypto.currentMarketValue}</td>\r\n                    <td>\r\n                      <button\r\n                        className=\"btn btn-danger\"\r\n                        onClick={(e) => {\r\n                          if (\r\n                            window.confirm(\r\n                              \"Are you sure you wish to delete this item?\"\r\n                            )\r\n                          ) {\r\n                            this.deleteCrypto(crypto.id);\r\n                          }\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        Delete{\" \"}\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListCryptoComponent;\r\n","import React, { Component } from \"react\";\r\n\r\nclass HeaderComponent extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header>\r\n          <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark sticky-top\">\r\n            <a class=\"navbar-brand\" href=\"#\">\r\n              Mindly\r\n            </a>\r\n            <button\r\n              type=\"button\"\r\n              class=\"navbar-toggler\"\r\n              data-toggle=\"collapse\"\r\n              data-target=\"#navbarCollapse\"\r\n            >\r\n              <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <div\r\n              class=\"collapse navbar-collapse justify-content-between sticky-top\"\r\n              id=\"navbarCollapse\"\r\n            >\r\n              <div class=\"navbar-nav\"></div>\r\n            </div>\r\n          </nav>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeaderComponent;\r\n","import React, { Component } from \"react\";\r\n\r\nclass FooterComponent extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\" container-fluid footer-copyright text-center py-3 text-light bg-dark\">\r\n        Mindly Crypto Portfolio 2020\r\n        <br />\r\n        <span className=\"text-muted\"> Desinged by Alireza Azari</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default FooterComponent;\r\n","import React, { Component } from \"react\";\r\n\r\nclass InfoComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      info: [],\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid bg-primary p-5\">\r\n        <div class=\"card-deck text-light\">\r\n          <div class=\"card bg-dark\">\r\n            <div class=\"card-header\">\r\n              <img\r\n                class=\"img-fluid mx-auto d-block\"\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c1/Bsv-icon-small.png/150px-Bsv-icon-small.png\"\r\n                alt=\"Cinque Terre\"\r\n              ></img>\r\n            </div>\r\n            <div class=\"card-body text-justify\">\r\n              <p class=\"card-text align-left\">\r\n                Bitcoin is a cryptocurrency invented in 2008 by an unknown\r\n                person or group of people using the name Satoshi Nakamoto and\r\n                started in 2009 when its implementation was released as\r\n                open-source software.\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"card bg-dark\">\r\n            <div class=\"card-header\">\r\n              <img\r\n                class=\"img-fluid mx-auto d-block\"\r\n                src=\"http://www.userlogos.org/files/ethereum1.png\"\r\n                alt=\"Cinque Terre\"\r\n              ></img>\r\n            </div>\r\n            <div class=\"card-body text-justify\">\r\n              <p class=\"card-text\">\r\n                Ethereum is a technology that lets you send cryptocurrency to\r\n                anyone for a small fee. It also powers applications that\r\n                everyone can use and no one can take down. It's the world's\r\n                programmable blockchain.\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"card bg-dark\">\r\n            <div class=\"card-header\">\r\n              <img\r\n                class=\"img-fluid mx-auto d-block\"\r\n                src=\"http://coinhubdesk.com/my_content/uploads/2018/04/ripple_logo_small.png\"\r\n                alt=\"Cinque Terre\"\r\n              ></img>\r\n            </div>\r\n            <div class=\"card-body text-justify\">\r\n              <p class=\"card-text\">\r\n                Ripple is a technology that acts as both a cryptocurrency and a\r\n                digital payment network for financial transactions. It was first\r\n                released in 2012 and was co-founded by Chris Larsen and Jed\r\n                McCaleb.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <br></br>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InfoComponent;\r\n","import React, { Component } from \"react\";\r\nimport CryptoService from \"../services/CryptoService\";\r\n\r\nclass FormComponent extends Component {\r\n  markets = new Map([]);\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: \"bitcoin\",\r\n      amount: \"\",\r\n      dateOfPurchase: \"\",\r\n      walletLocation: \"\",\r\n      currentMarketValue: \"\",\r\n      message: null,\r\n    };\r\n    this.changeCryptoHandler = this.changeCryptoHandler.bind(this);\r\n    this.changeAmountHandler = this.changeAmountHandler.bind(this);\r\n    this.changeWalletLocationHandler = this.changeWalletLocationHandler.bind(\r\n      this\r\n    );\r\n    this.changeDateOfPurchaseHandler = this.changeDateOfPurchaseHandler.bind(\r\n      this\r\n    );\r\n    this.changecurrentMarketValueHandler = this.changecurrentMarketValueHandler.bind(\r\n      this\r\n    );\r\n    this.addCrypto = this.addCrypto.bind(this);\r\n    this.ShowCurrentDate = this.ShowCurrentDate.bind(this);\r\n\r\n    CryptoService.getMarketsData().then((data) => {\r\n      data.data.map((item) => {\r\n        if ([\"bitcoin\", \"ethereum\", \"ripple\"].includes(item.id)) {\r\n          this.markets.set(item.id, item.current_price);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  ShowCurrentDate = () => {\r\n    var date = new Date().getDate();\r\n    var month = new Date().getMonth() + 1;\r\n    var year = new Date().getFullYear();\r\n\r\n    return date + \"/\" + month + \"/\" + year;\r\n  };\r\n\r\n \r\n\r\n  addCrypto = (e) => {\r\n   \r\n    let Crypto = {\r\n      cryptocurrency: this.state.value,\r\n      amount: this.state.amount,\r\n      walletLocation: this.state.walletLocation,\r\n      dateOfPurchase: this.ShowCurrentDate(this.state.value),\r\n      currentMarketValue: this.markets.get(this.state.value),\r\n    };\r\n\r\n    CryptoService.addCrypto(Crypto).then((res) => {\r\n      this.setState({ message: \"Crypto added successfuly.\" });\r\n    });\r\n  };\r\n\r\n  changeCryptoHandler = (event) => {\r\n    this.setState({ value: event.target.value });\r\n  };\r\n  changeAmountHandler = (event) => {\r\n    this.setState({ amount: event.target.value });\r\n  };\r\n  changeWalletLocationHandler = (event) => {\r\n    this.setState({ walletLocation: event.target.value });\r\n  };\r\n  changeDateOfPurchaseHandler = (event) => {\r\n    this.setState({ dateOfPurchase: event.target.value });\r\n  };\r\n  changecurrentMarketValueHandler = (event) => {\r\n    this.setState({ currentMarketValue: event.target.value });\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\" container-sm card-header bg-primary info-color text-left py-2\">\r\n          <h2>Please enter an item to your portfolio</h2>\r\n        </div>\r\n        <div className=\" container-sm card-body bg-light text-dark\">\r\n          <form className=\"form-vertical\" role=\"form\">\r\n            <div className=\"form-group \">\r\n              <div className=\"form-group \">\r\n                {\" \"}\r\n                <label>Cryptocurrency type</label>\r\n                <select\r\n                  className=\"form-control w-25\"\r\n                  value={this.state.value}\r\n                  onChange={this.changeCryptoHandler}\r\n                >\r\n                  <option value=\"bitcoin\" className=\"form-control\" id=\"sel1\">\r\n                    Bitcoin\r\n                  </option>\r\n                  <option\r\n                    value=\"ethereum\"\r\n                    placeholder=\"Cryptocurrency type\"\r\n                    name=\"CryptocurrencyType\"\r\n                    className=\"form-control\"\r\n                    id=\"sel1\"\r\n                  >\r\n                    Ethereum\r\n                  </option>\r\n                  <option\r\n                    value=\"ripple\"\r\n                    placeholder=\"Cryptocurrency type\"\r\n                    name=\"CryptocurrencyType\"\r\n                    className=\"form-control\"\r\n                    id=\"sel1\"\r\n                  >\r\n                    Ripple\r\n                  </option>\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Amount</label>\r\n                <input\r\n                  type=\"number\"\r\n                  placeholder=\"Amount\"\r\n                  name=\"amount\"\r\n                  className=\"form-control w-25\"\r\n                  required\r\n                  value={this.state.amount}\r\n                  onChange={this.changeAmountHandler}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  Wallet Location\r\n                  <textarea\r\n                    className=\"form-control\"\r\n                    placeholer=\"Wallet Location\"\r\n                    required\r\n                    value={this.state.walletLocation}\r\n                    onChange={this.changeWalletLocationHandler}\r\n                  />\r\n                </label>\r\n              </div>\r\n              <br></br>\r\n            </div>\r\n            <button className=\"btn btn-primary\" onClick={this.addCrypto}>\r\n              Save\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormComponent;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport ListCryptoComponent from \"./components/ListCryptoComponent\";\r\nimport HeaderComponent from \"./components/HeaderComponent\";\r\nimport FooterComponent from \"./components/FooterComponent\";\r\nimport InfoComponent from \"./components/InfoComponent\";\r\nimport FormComponent from \"./components/FormComponent\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container-fluid bg-dark text-light \">\r\n      <Router>\r\n        <HeaderComponent />\r\n\r\n        <InfoComponent />\r\n        <br></br>\r\n        <div>\r\n          <FormComponent />\r\n        </div>\r\n        <br></br>\r\n        <div>\r\n          <ListCryptoComponent />\r\n        </div>\r\n        <FooterComponent />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}